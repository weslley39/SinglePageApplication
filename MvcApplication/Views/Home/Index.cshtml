@using MvcApplication.Models

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_master.cshtml";
}

<h2>Grade de Horários</h2>

<div class="btn-toolbar" data-bind="visible: viewModel.timesheetsSelected() > 0">
    <div class="btn-group">
        <span class="btn btn-primary">Ações</span>
        <a class="btn btn-primary dropdown-toggle" data-toggle="dropdown" href="">
            <span class="caret"></span>
        </a>
        <ul class="dropdown-menu">
            <li><a id="new-timesheet"
                   data-toggle="modal" 
                   href="#timesheet-delete">Deletar</a></li>
        </ul>
    </div>
</div>

<table id="timesheets" class="table table-striped table-hover table-condensed">   
    <thead>
        <tr>
            <th></th>
            <th>Nome</th>
            <th>Sobrenome</th>
            <th>Mês</th>
            <th>Ano</th>
        </tr>
    </thead>
    <tbody data-bind="foreach: viewModel.timesheets">
        <tr>
            <td><input type="checkbox" data-bind="checked: selected"/></td>
            <td><a href="#timesheet-modal" data-bind="text: firstname, click: function(form) { edit('Timesheet') }" data-toggle="modal"></a></td>
            <td><a href="#timesheet-modal" data-bind="text: lastname, click: function(form) { edit('Timesheet') }" data-toggle="modal"></a></td>
            <td data-bind="text: month"></td>
            <td data-bind="text: year"></td>
        </tr>
    </tbody>
</table>

<div class="pull-right">
    <a id="new-timesheet" class="btn btn-success" 
        data-toggle="modal" href="#timesheet-modal">Add timesheet</a>
</div>

<div class="modal hide fade" id="timesheet-modal">
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal">×</button>
        <h3>Grade de Horários</h3>
    </div>
    
    <form id="Timesheet" 
          data-bind="submit:
         function(form) { postTimesheet(form, 'timesheet-modal') }">
        <div class="modal-body">
            @{ Html.RenderPartial("_Timesheet", new Timesheet()); }
        </div>
    
        <div class="modal-footer">
            <a href="#" class="btn" data-dismiss="modal">Cancel</a>
            <input type="submit" class="btn btn-primary" value="Save" />
        </div>
    </form>
</div>

<div class="modal hide fade" id="timesheet-delete">
	<div class="modal-header">
        <button type="button" class="close" 
                data-dismiss="modal">×</button>
		<h3>Deletar?</h3>
	</div>
    <div class="modal-body">
      <p>Você tem certeza que deseja deletar essa Linha?</p>
    </div>

	<div class="modal-footer">
		<a href="#" class="btn" data-dismiss="modal">Cancel</a>
        <input type="submit" class="btn btn-danger" value="Delete" 
               data-bind="click: function() { deleteTimesheets('timesheet-delete') }" />
	</div>
</div>





@*-------------------------------------------------------------------------------*@




<script type="text/javascript">

    $(function () {
        ko.applyBindings(viewModel);
        viewModel.loadTimesheets();
    });

    function timesheet(timesheet) {
        this.id = ko.observable(timesheet.id);
        this.firstname = ko.observable(timesheet.firstname);
        this.lastname = ko.observable(timesheet.lastname);
        this.month = ko.observable(timesheet.month);
        this.year = ko.observable(timesheet.year);
        this.selected = ko.observable(false);

        this.edit = function (formId) {
            var form = $('#' + formId);
            form.data('timesheet', this);
        };

        this.update = function (timesheet) {
            this.id(timesheet.id);
            this.firstname(timesheet.firstname);
            this.lastname(timesheet.lastname);
            this.month(timesheet.month);
            this.year(timesheet.year);
        };

        this.select = function (s, e) {
            console.log(e);
        };
    }

    var viewModel = {
        timesheets: ko.observableArray([]),

        loadTimesheets: function () {
            var self = this;
            $.getJSON(
                '@Url.RouteUrl("DefaultApi", new { httproute = "", controller = "timesheets" })',
            function (timesheets) {
                self.timesheets.removeAll();
                $.each(timesheets, function (index, item) {
                    self.timesheets.push(new timesheet(item));
                });
            }
        );
    },

    postTimesheet: function (form, modalId) {
        form = $(form);
        if (!form.valid())
            return;

        var json = JSON.stringify(this._getTimesheetFromFrom(form));

        var update = form.find("input[type='hidden'][id='id']").val();
        var httpVerb = !update ? "POST" : "PUT";

        var self = this;
        $.ajax({
            url: '@Url.RouteUrl("DefaultApi", new { httproute = "", controller = "timesheets" })',
            type: httpVerb,
            data: json,
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (jsonObject) {
                if (update) {
                    var match = ko.utils.arrayFirst(self.timesheets(), function (item) {
                        return jsonObject.id === item.id();
                    });
                    match.update(jsonObject);
                }
                else {
                    self.timesheets.push(new timesheet(jsonObject));
                }
                $('#' + modalId).modal('hide');
            }
        });
    },

    deleteTimesheets: function (modalId) {
        var ids = new Array();
        $.each(this.timesheets(), function (index, timesheet) {
            if (timesheet.selected())
                ids.push(timesheet.id());
        });

        var self = this;
        $.ajax({
            url: '@Url.RouteUrl("DefaultApi", new { httproute = "", controller = "timesheets" })',
            type: 'DELETE',
            data: ko.toJSON(ids),
            contentType: 'application/json; charset=utf-8',
            success: function () {
                $.each(ids, function (index, id) {
                    var match = ko.utils.arrayFirst(self.timesheets(), function (item) {
                        return id === item.id();
                    });
                    self.timesheets.remove(match);
                });
                $('#' + modalId).modal('hide');
            }
        });
    },

    _getTimesheetFromFrom: function (form) {
        form = $(form);
        var timesheet = {};
        form.find('input[type!=submit],select').each(function () {
            timesheet[this.name] = $(this).val();
        });
        return timesheet;
    }
};

$('#timesheet-modal').on('hide', function () {
    var form = $('#Timesheet');
    form.validate().resetForm();
    form.get(0).reset();
    form.removeData('timesheet');
    form.find("input[type='hidden'][id='id']").remove();
});

$('#timesheet-modal').on('show', function () {
    var form = $('#Timesheet');
    var timesheet = form.data('timesheet');
    if (!timesheet)
        return;

    $('<input>').attr('type', 'hidden')
                .attr('id', 'id')
                .attr('name', 'id')
                .val(timesheet.id()).prependTo(form);
    form.find('#FirstName').val(timesheet.firstname());
    form.find('#LastName').val(timesheet.lastname());
    form.find('#Month').val(timesheet.month());
    form.find('#Year').val(timesheet.year());
});

viewModel.timesheetsSelected = ko.computed(function () {
    var selected = 0;
    $.each(this.timesheets(), function (index, timesheet) {
        if (timesheet.selected())
            selected++;
    });
    return selected;
}, viewModel);


</script>